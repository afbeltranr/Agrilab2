"E7",
"E7-2",
"E.A.7",
"E.A.7-2")
Abs.muestras <- c(mean(0.032,0.030,0.026),
mean(0.030,0.030,0.027),
mean(0.079,0.085,0.073),
mean(0.080,0.083,0.078),
mean(0.133,0.127,0.131),
mean(0.131,0.124,0.124),
mean(0.267,0.275,0.278),
mean(0.288,0.273,0.285),
mean(0.348,0.342,0.432),
mean(0.353,0.354,0.350))
muestras2.1 <- data.frame(Muestra = muestras2, Absorbanciau.a. = Abs.muestras)
muestras2.1$C.sin.intercepto <- muestras2.1$Absorbanciau.a./modelo.05.03.2021$coefficients[2]
muestras2.1$C.con.intercepto <- (muestras2.1$Absorbanciau.a.-modelo.05.03.2021$coefficients[1])/modelo.05.03.2021$coefficients[2]-
muestras2 <- c("B7",
"B7-2",
"AFM-09722",
"AFM-09722-2",
"B.A.7",
"B.A.7-2",
"E7",
"E7-2",
"E.A.7",
"E.A.7-2")
Abs.muestras <- c(mean(0.032,0.030,0.026),
mean(0.030,0.030,0.027),
mean(0.079,0.085,0.073),
mean(0.080,0.083,0.078),
mean(0.133,0.127,0.131),
mean(0.131,0.124,0.124),
mean(0.267,0.275,0.278),
mean(0.288,0.273,0.285),
mean(0.348,0.342,0.432),
mean(0.353,0.354,0.350))
muestras2.1 <- data.frame(Muestra = muestras2, Absorbanciau.a. = Abs.muestras)
muestras2.1$C.sin.intercepto <- muestras2.1$Absorbanciau.a./modelo.05.03.2021$coefficients[2]
muestras2.1$C.con.intercepto <- (muestras2.1$Absorbanciau.a.- modelo.05.03.2021$coefficients[1])/modelo.05.03.2021$coefficients[2]
muestras2.1
residuales3 <- modelo.05.03.2021$residuals
boxplot(residuales3)
abline(h = median(residuales3), col = "red", lty = 2)
median(residuales3)
library(ggplot2)
g <- qplot(residuales3)
g + geom_density(alpha = 0.4,)
library(moments)
kurtosis(residuales3)
library(moments)
kurtosis(residuales3)
skewness(residuales3)
residuales3
muestras2 <- c("B7",
"B7-2",
"AFM-09722",
"AFM-09722-2",
"B.A.7",
"B.A.7-2",
"E7",
"E7-2",
"E.A.7",
"E.A.7-2")
Abs.muestras <- c(mean(0.032,0.030,0.026),
mean(0.030,0.030,0.027),
mean(0.079,0.085,0.073),
mean(0.080,0.083,0.078),
mean(0.133,0.127,0.131),
mean(0.131,0.124,0.124),
mean(0.267,0.275,0.278),
mean(0.288,0.273,0.285),
mean(0.348,0.342,0.432),
mean(0.353,0.354,0.350))
muestras2.1 <- data.frame(Muestra = muestras2, Absorbanciau.a. = Abs.muestras)
muestras2.1$C.sin.intercepto <- muestras2.1$Absorbanciau.a./modelo.05.03.2021$coefficients[2]
muestras2.1$C.con.intercepto <- (muestras2.1$Absorbanciau.a.- modelo.05.03.2021$coefficients[1])/modelo.05.03.2021$coefficients[2]
print(muestras2.1)
blanco.curva <- 0.01
concentraciones <- c(1,2,5,10,20,50,100)
absorbancias <- c(mean(0.016,0.013,0.016),
mean(0.021,0.020,0.020),
mean(0.039,0.041,0.043),
mean(0.083,0.085,0.085),
mean(0.160,0.0160,0.0156),
mean(0.391,0.392,0.390),
mean(0.694,0.695,0.696)
)
absorbancias <- absorbancias - blanco.curva
curva3 <- data.frame(Si.mg.L = concentraciones, absorbancia.u.a.=absorbancias)
blanco.curva <- 0.01
concentraciones <- c(1,2,5,10,20,50,100)
absorbancias <- c(mean(0.016,0.013,0.016),
mean(0.021,0.020,0.020),
mean(0.039,0.041,0.043),
mean(0.083,0.085,0.085),
mean(0.160,0.0160,0.0156),
mean(0.391,0.392,0.390),
mean(0.694,0.695,0.696)
)
absorbancias <- absorbancias - blanco.curva
curva3 <- data.frame(Si.mg.L = concentraciones, absorbancia.u.a.=absorbancias)
modelo.05.03.2021 <- lm(absorbancia.u.a.~Si.mg.L , data = curva3)
summary(modelo.05.03.2021)
library(ggplot2)
g <- ggplot(curva3, aes(Si.mg.L,absorbancia.u.a.))
g + geom_smooth(method = "lm") + geom_point()
modelo.05.03.2021 <- lm(absorbancia.u.a.~Si.mg.L , data = curva3)
summary(modelo.05.03.2021)
Q <- qnorm(1-0.05/2)
Q <- qnorm(1-0.05/2)
intervalo_intercepto3 <- Q* 0.0078207
intervalo_pendiente3 <- Q* 0.0001813
print(round(c(0.0037170 ,0.0069573 ),3))
print(round(c(intervalo_intercepto3,intervalo_pendiente3),3))
Q <- qnorm(1-0.05/2)
intervalo_intercepto3 <- Q* 0.0078207
intervalo_pendiente3 <- Q* 0.0001813
print(round(c(0.0037170 ,0.0069573 ),3))
print(round(c(intervalo_intercepto3,intervalo_pendiente3),4))
C.curva <- c(0, 1,2,5,10,20,50,75,100) # Las concentraciones preparadas
Abs.curva <- c(0.000,0.013,0.026,0.075, mean(0.179,0.123,0.140), 0.269, mean(0.623,0.628,0.625),mean(1.107,1.112,1.105),mean(1.215,1.213,1.219)) # Las absorbancias leídas, los valores que no son el resultado de un promedio tuvieron 3 réplicas iguales
curva <- data.frame(Si.mg.L=C.curva, Absorbancia.u.a.=Abs.curva)
print(curva)
###----------------------------Curva de calibración y cuantificación
modelo <- lm( Absorbancia.u.a. ~ Si.mg.L , data = curva) # Se crea el modelo lineal mediante OLS (Ordinary Least Squares Regression)
summary(modelo)
library(ggplot2)
g <- ggplot(curva, aes(Si.mg.L, Absorbancia.u.a.))
g + geom_point() + geom_smooth(method ="lm")
residuales <- modelo$residuals
boxplot(residuales)
abline(h = median(residuales), col = "red", lty = 2)
median(residuales)
set.seed(2)# para que los calculos de valores aleatorios sean reproducibles cada vez que se corra el código de este informe
dist <- rnorm(9, mean=0 , sd= sd(residuales)) #
boxplot(dist)
library(ggplot2)
g <- qplot(residuales)
g + geom_density(alpha = 0.4,)
library(moments)
kurtosis(residuales)
library(car)
qqPlot(residuales, envelope = 0.95)
curva[c(8,9),]
Q <- qnorm(1-0.05/2)
intervalo_intercepto  <- Q *0.0268986
intervalo_pendiente <- Q*0.0005908
print(round(c(modelo$coefficients[1],modelo$coefficients[2]),3))
print(round(c(intervalo_intercepto,intervalo_pendiente),3))
round(9*0.98)
curva[c(9,8),]
curva2 <- curva[-c(8,9),]
modelo2 <-  lm( Absorbancia.u.a. ~ Si.mg.L , data = curva2)
summary(modelo2)
library(ggplot2)
g <- ggplot(curva2, aes(Si.mg.L, Absorbancia.u.a.))
g + geom_point() + geom_smooth(method ="lm")
residuales2 <- modelo2$residuals
boxplot(residuales2)
abline(h = median(residuales2), col = "red", lty = 2)
median(residuales2)
library(ggplot2)
g <- qplot(residuales2)
g + geom_density(alpha = 0.4,)
library(moments)
kurtosis(residuales2)
skewness(residuales2)
y.pred <- (curva2$Si.mg.L*modelo$coefficients[2]) + modelo$coefficients[1]
residuales <- data.frame(residuales = modelo2$residuals, y.pred = y.pred)
ggplot(residuales, aes(y.pred, residuales)) + geom_point()
Q <- qnorm(1-0.05/2)
intervalo_intercepto2  <- 0.0103684*Q
intervalo_pendiente2 <-0.0004984*Q
print(round(c(modelo2$coefficients[1],modelo2$coefficients[2]),3))
print(round(c(intervalo_intercepto2,intervalo_pendiente2),3))
nombres <- c("blanco procedimiento 1",
"MRC Dil 2-1",
"402-D50-1",
"402-D50-2",
"402-D50-3",
"blanco procedimiento 2",
"402-D50-3",
"MRC Dil 2-2",
"402-D50-4",
"blanco procedimiento 3",
"402-D50-5",
"402-D50-6",
"402-D50-7",
"402-D50-8",
"Si Soluble D10",
"Si Soluble D20",
"MRC-1",
"MRC-2")
absorbancia <- c(0.048,0.237,0.124,0.120,0.062,0.048,0.106,0.271,0.159,0.046,0.117,0.179,0.134,0.132,0.847,0.472,0.432,0.447)
muestras <- data.frame(muestra = nombres, absorbancia= absorbancia)
muestras
muestras$concentracion.sin.intercepto <- round((muestras$absorbancia /modelo2$coefficients[2]),3)
muestras $concentracion.con.intercepto <- round((muestras$absorbancia -modelo2$coefficients[1])/modelo2$coefficients[2],3)
print(muestras)
FD.MCR1 <- round(1.803807262,5)
FD.MCR2 <- round(1.850335307,5)
masas.muestras <- c(0, 0.101/FD.MCR1,	0.1027,	0.1001,	0.1023,	0,	0.1054,	0.1034/FD.MCR2,	0.1031,	0,	0.1010,	0.1011,	0.1025,	0.1113, NA, NA,0.101,0.1034
)
muestras$porc.SiO2 <- round(muestras$concentracion.sin.intercepto *(0.025*60.8*100)/(1000*28.09*masas.muestras), 4)
muestras
Vol.alic.D10.Si.Sol <- 1
Vol.alic.D20.Si.Sol <- 0.5
muestras$porc.SiO2[15] <- round(  muestras$concentracion.con.intercepto[15]*(0.01*250*1*60.8*100)/(Vol.alic.D10.Si.Sol*1000*28.09*1.0182)       ,4)
muestras$porc.SiO2[16] <- round(  muestras$concentracion.con.intercepto[15]*(0.01*250*1*60.8*100)/(Vol.alic.D20.Si.Sol*1000*28.09*1.0182)       ,4)
muestras
m.402 <- muestras[c(3,4,5,7,9,11:14),5]
boxplot(m.402)
m.402.sin.atipicos <- m.402[c(3,4,6)]
boxplot(m.402.sin.atipicos)
summary(m.402.sin.atipicos)
library(moments)
skewness(m.402.sin.atipicos)
error.diatomeas <-
((74.2-0.402)/74.2)*100
error.diatomeas
tabla.Si.Soluble <- data.frame(muestra = muestras$muestra[c(15,16)], SiO2 = muestras[c(15,16),5])
tabla.Si.Soluble
tabla.MRC <- data.frame(muestra = muestras$muestra[c(2,8,17,18)],
SiO2 = muestras[c(2,8,17,18),5])
tabla.MRC$Error <- round(abs(((tabla.MRC$SiO2-2.01)/2.01)*100),3)
tabla.MRC
blanco.curva <- 0.01
concentraciones <- c(1,2,5,10,20,50,100)
absorbancias <- c(mean(0.016,0.013,0.016),
mean(0.021,0.020,0.020),
mean(0.039,0.041,0.043),
mean(0.083,0.085,0.085),
mean(0.160,0.0160,0.0156),
mean(0.391,0.392,0.390),
mean(0.694,0.695,0.696)
)
absorbancias <- absorbancias - blanco.curva
curva3 <- data.frame(Si.mg.L = concentraciones, absorbancia.u.a.=absorbancias)
modelo.05.03.2021 <- lm(absorbancia.u.a.~Si.mg.L , data = curva3)
summary(modelo.05.03.2021)
Q <- qnorm(1-0.05/2)
intervalo_intercepto3 <- Q* 0.0078207
intervalo_pendiente3 <- Q* 0.0001813
print(round(c(0.0037170 ,0.0069573 ),3))
print(round(c(intervalo_intercepto3,intervalo_pendiente3),4))
library(ggplot2)
g <- ggplot(curva3, aes(Si.mg.L,absorbancia.u.a.))
g + geom_smooth(method = "lm") + geom_point()
residuales3 <- modelo.05.03.2021$residuals
boxplot(residuales3)
abline(h = median(residuales3), col = "red", lty = 2)
median(residuales3)
library(ggplot2)
g <- qplot(residuales3)
g + geom_density(alpha = 0.4,)
library(moments)
kurtosis(residuales3)
skewness(residuales3)
muestras2 <- c("B7",
"B7-2",
"AFM-09722",
"AFM-09722-2",
"B.A.7",
"B.A.7-2",
"E7",
"E7-2",
"E.A.7",
"E.A.7-2")
Abs.muestras <- c(mean(0.032,0.030,0.026),
mean(0.030,0.030,0.027),
mean(0.079,0.085,0.073),
mean(0.080,0.083,0.078),
mean(0.133,0.127,0.131),
mean(0.131,0.124,0.124),
mean(0.267,0.275,0.278),
mean(0.288,0.273,0.285),
mean(0.348,0.342,0.432),
mean(0.353,0.354,0.350))
muestras2.1 <- data.frame(Muestra = muestras2, Absorbanciau.a. = Abs.muestras)
muestras2.1$C.sin.intercepto <- muestras2.1$Absorbanciau.a./modelo.05.03.2021$coefficients[2]
muestras2.1$C.con.intercepto <- (muestras2.1$Absorbanciau.a.- modelo.05.03.2021$coefficients[1])/modelo.05.03.2021$coefficients[2]
print(muestras2.1)
print(muestras2.1)
ConcentracionesC.4 <- c(0,1,2,5,10,20,50,100)
Abs.H2O.HPLC <- c(0.012,0.09,0.013)
AbsorbanciasC.4 <- c(mean(0.05,-0.06,0.04),
mean(0.006,0.011,0.008),
mean(0.023,0.022,0.024),
mean(0.052,0.056,0.057),
mean(0.097,0.099,0.098),
mean(0.169,0.167,0.169),
mean(0.364,0.369,0.366),
mean(0.703,0.701,0.705))
curva4 <- data.frame(Si.mg.L = ConcentracionesC.4, Absorbancia.u.a. = AbsorbanciasC.4)
modelo4 <- lm(Absorbancia.u.a. ~ Si.mg.L, data = curva4)
intercepto4 <- modelo4$coefficients[1]
pendiente4 <- modelo4$coefficients[2]
summary(modelo4)
boxplot(modelo4$residuals)
y.pred4 <- (curva4$Si.mg.L*modelo4$coefficients[2]) + modelo4$coefficients[1]
residuales4 <- data.frame(residuales = modelo4$residuals, y.pred = y.pred4)
ggplot(residuales4, aes(y.pred, residuales)) + geom_point()
intervalo_intercepto4 <-  0.007185*3.155
intervalo_pendiente4 <-  0.000178*38.325
print(round(c(0.022664 ,0.006823),3))
print(round(c(intervalo_intercepto4,intervalo_pendiente4),3))
intervalo_intercepto4 <-  0.007185*Q
intervalo_pendiente4 <-  0.000178*Q
print(round(c(0.022664 ,0.006823),3))
print(round(c(intervalo_intercepto4,intervalo_pendiente4),3))
intervalo_intercepto4 <-  0.007185*Q
intervalo_pendiente4 <-  0.000178*Q
print(round(c(0.022664 ,0.006823),3))
print(round(c(intervalo_intercepto4,intervalo_pendiente4),4))
muestras4 <- data.frame(Muestra = c("Control 1.mg.L",
"Control 20.mg.L",
"Control 100.mg.L",
"Blanco.A.A.1",
"E.A.1",
"E.A.1 + Silicio",
"E.Est Silicio 1",
"AFM 9722 - 1",
"AFM 9722 - 2",
"AFM 12863 D100"
)
)
muestras4$Absorbancia.u.a. <- c(mean(0.016,0.018,0.020),
mean(0.163,0.153,0.165),
mean(0.707,0.696,0.703),
mean(0.015,0.016,0.014),
mean(0.211,0.200,0.199),
mean(0.219,0.220,0.230),
mean(0.143,0.141,0.146),
mean(0.010,0.017,0.016),
mean(0.008,0.024,0.025),
mean(0.213,0.212,0.209))
muestras4$Si.mg.L.Con.Intercepto <- (muestras4$Absorbancia.u.a - intercepto4) / pendiente4
muestras4$Si.mg.L.Sin.Intercepto <- (muestras4$Absorbancia.u.a) / pendiente4
print(muestras4)
print(muestras4)
print(muestras2.1)
ConcentracionesC.4 <- c(0,1,2,5,10,20,50,100)
Abs.H2O.HPLC <- c(0.012,0.09,0.013)
AbsorbanciasC.4 <- c(mean(0.05,-0.06,0.04),
mean(0.006,0.011,0.008),
mean(0.023,0.022,0.024),
mean(0.052,0.056,0.057),
mean(0.097,0.099,0.098),
mean(0.169,0.167,0.169),
mean(0.364,0.369,0.366),
mean(0.703,0.701,0.705))
curva4 <- data.frame(Si.mg.L = ConcentracionesC.4, Absorbancia.u.a. = AbsorbanciasC.4)
intervalo_intercepto4 <-  0.007185*Q
intervalo_pendiente4 <-  0.000178*Q
print(round(c(0.022664 ,0.006823),3))
print(round(c(intervalo_intercepto4,intervalo_pendiente4),4))
library(ggplot2)
g <- ggplot(curva4, aes(Si.mg.L,Absorbancia.u.a.))
g + geom_smooth(method = 'lm') + geom_point()
muestras4 <- data.frame(Muestra = c("Control 1.mg.L",
"Control 20.mg.L",
"Control 100.mg.L",
"Blanco.A.A.1",
"E.A.1",
"E.A.1 + Silicio",
"E.Est Silicio 1",
"AFM 9722 - 1",
"AFM 9722 - 2",
"AFM 12863 D100"
)
)
muestras4$Absorbancia.u.a. <- c(mean(0.016,0.018,0.020),
mean(0.163,0.153,0.165),
mean(0.707,0.696,0.703),
mean(0.015,0.016,0.014),
mean(0.211,0.200,0.199),
mean(0.219,0.220,0.230),
mean(0.143,0.141,0.146),
mean(0.010,0.017,0.016),
mean(0.008,0.024,0.025),
mean(0.213,0.212,0.209))
muestras4$Si.mg.L.Con.Intercepto <- (muestras4$Absorbancia.u.a - intercepto4) / pendiente4
muestras4$Si.mg.L.Sin.Intercepto <- (muestras4$Absorbancia.u.a) / pendiente4
print(muestras4)
library(ggplot2)
g <- ggplot(curva4, aes(Si.mg.L,Absorbancia.u.a.))
g + geom_smooth(method = 'lm') + geom_point() + geom_point(aes(Si.mg.L.Con.Intercepto,Absorbancia.u.a.), data = muestras4, colour = 'red')
library(ggplot2)
g <- ggplot(curva4, aes(Si.mg.L,Absorbancia.u.a.))
g + geom_smooth(method = 'lm') + geom_point() + geom_point(aes(Si.mg.L.Con.Intercepto,Absorbancia.u.a.), data = muestras4, colour = 'red')
print(muestras4)
muestras4$recuperacion[6] <- ((muestras4$Si.mg.L.Con.Intercepto[6]- muestras4$Si.mg.L.Con.Intercepto[5])/15.80)*100
muestras4$recuperacion <- rep(NA,10)
muestras4$recuperacion[6] <- ((muestras4$Si.mg.L.Con.Intercepto[6]- muestras4$Si.mg.L.Con.Intercepto[5])/15.80)*100
print(muestras4)
muestras4$recuperacion <- rep(NA,10)
muestras4$recuperacion[6] <- ((muestras4$Si.mg.L.Con.Intercepto[6]- muestras4$Si.mg.L.Con.Intercepto[5])/15.80)*100
muestras4$recuperacion[7] <- ((muestras4$Si.mg.L.Con.Intercepto[7]- muestras4$Si.mg.L.Con.Intercepto[4])/16.02)*100
print(muestras4)
Muestra.PZR.AA <- 25.90
blanco.AA <- -5.58
Muestra.PZR.Ad <- 30.65
blanco.AA  <- 16.64
recuperaciones <- data.frame(muestra = c('Blanco','muestra Paz de Rio'),
recuperacion.A.A. = c(((16.64 - (-5.58))/16.02) * 100, (30.65 - (25.90))/15.80) * 10  ))
recuperaciones <- data.frame(muestra = c('Blanco','muestra Paz de Rio'),
recuperacion.A.A. = c(((16.64 - (-5.58))/16.02) * 100, ((30.65 - (25.90))/15.80) * 10  )
Muestra.PZR.AA <- 25.90
blanco.AA <- -5.58
Muestra.PZR.Ad <- 30.65
blanco.AA.Ad  <- 16.64
recuperaciones <- data.frame(muestra = c('Blanco','muestra Paz de Rio'),
recuperacion.A.A. = c(  (blanco.AA.Ad - blanco.AA)/15.80*100  , (Muestra.PZR.Ad - Muestra.PZR.AA)/15.80*100 )
recuperaciones <- data.frame(muestra = c('Blanco','muestra Paz de Rio'),
recuperacion.A.A. = c(  (blanco.AA.Ad - blanco.AA)/15.80*100  , (Muestra.PZR.Ad - Muestra.PZR.AA)/15.80*100 ))
recuperaciones
recuperaciones <- data.frame(muestra = c('Blanco','muestra Paz de Rio'),
recuperacion.A.A. = c(  (blanco.AA.Ad - blanco.AA)/15.80*100  , (Muestra.PZR.Ad - Muestra.PZR.AA)/15.80*100 )
recuperacion.UV = round(c(muestras4[7,5],muestras4[6,5]),3)
recuperaciones <- data.frame(muestra = c('Blanco','muestra Paz de Rio'),
recuperacion.A.A. = c(  (blanco.AA.Ad - blanco.AA)/15.80*100  , (Muestra.PZR.Ad - Muestra.PZR.AA)/15.80*100 ),
recuperacion.UV = round(c(muestras4[7,5],muestras4[6,5]),3)
)
recuperaciones
Q <- qt(1-0.05/2)
?df
?qt
Q <- qnorm(1-0.05/2)
intervalo_intercepto  <- Q *0.0268986
intervalo_pendiente <- Q*0.0005908
print(round(c(modelo$coefficients[1],modelo$coefficients[2]),3))
print(round(c(intervalo_intercepto,intervalo_pendiente),3))
Q <- qnorm(p=1-0.05/2)
intervalo_intercepto  <- Q *0.0268986
intervalo_pendiente <- Q*0.0005908
print(round(c(modelo$coefficients[1],modelo$coefficients[2]),3))
print(round(c(intervalo_intercepto,intervalo_pendiente),3))
devtools::install_github('rstudio/rmarkdown')
install.packages('devtools')
summary(modelo)
muestras4
recuperaciones <- data.frame(muestra = c('Blanco','muestra Paz de Rio'),
recuperacion.A.A. = c(  (blanco.AA.Ad - blanco.AA)/15.80*100  , (Muestra.PZR.Ad - Muestra.PZR.AA)/15.80*100 ),
recuperacion.UV = round(c(muestras4[7,5],muestras4[6,5]),3)
)
recuperaciones
muestras4 <- data.frame(Muestra = c("Control 1.mg.L",
"Control 20.mg.L",
"Control 100.mg.L",
"Blanco.A.A.1",
"E.A.1",
"E.A.1 + Silicio",
"E.Est Silicio 1",
"AFM 9722 - 1",
"AFM 9722 - 2",
"AFM 12863 D100"
)
)
muestras4$Absorbancia.u.a. <- c(mean(0.016,0.018,0.020),
mean(0.163,0.153,0.165),
mean(0.707,0.696,0.703),
mean(0.015,0.016,0.014),
mean(0.211,0.200,0.199),
mean(0.219,0.220,0.230),
mean(0.143,0.141,0.146),
mean(0.010,0.017,0.016),
mean(0.008,0.024,0.025),
mean(0.213,0.212,0.209))
muestras4$Si.mg.L.Con.Intercepto <- (muestras4$Absorbancia.u.a - intercepto4) / pendiente4
muestras4$Si.mg.L.Sin.Intercepto <- (muestras4$Absorbancia.u.a) / pendiente4
muestras4$Si.mg.L.Con.Intercepto <- round(muestras4$Si.mg.L.Con.Intercepto,3)
muestras4$Si.mg.L.Sin.Intercepto <- round(muestras4$Si.mg.L.Sin.Intercepto,3)
knitr::kable(muestras4)
str(muestras4)
muestras4$SiO2[10]
muestras4$recuperacion <- rep(NA,10)
muestras4$recuperacion[6] <- ((muestras4$Si.mg.L.Con.Intercepto[6]- muestras4$Si.mg.L.Con.Intercepto[5])/15.80)*100
muestras4$recuperacion[7] <- ((muestras4$Si.mg.L.Con.Intercepto[7]- muestras4$Si.mg.L.Con.Intercepto[4])/16.02)*100
View(modelo4)
View(muestras4)
muestras4 <- data.frame(Muestra = c("Control 1.mg.L",
"Control 20.mg.L",
"Control 100.mg.L",
"Blanco.A.A.1",
"E.A.1",
"E.A.1 + Silicio",
"E.Est Silicio 1",
"AFM 9722 - 1",
"AFM 9722 - 2",
"AFM 12863 D100"
)
)
muestras4$Absorbancia.u.a. <- c(mean(0.016,0.018,0.020),
mean(0.163,0.153,0.165),
mean(0.707,0.696,0.703),
mean(0.015,0.016,0.014),
mean(0.211,0.200,0.199),
mean(0.219,0.220,0.230),
mean(0.143,0.141,0.146),
mean(0.010,0.017,0.016),
mean(0.008,0.024,0.025),
mean(0.213,0.212,0.209))
muestras4$Si.mg.L.Con.Intercepto <- (muestras4$Absorbancia.u.a - intercepto4) / pendiente4
muestras4$Si.mg.L.Sin.Intercepto <- (muestras4$Absorbancia.u.a) / pendiente4
muestras4$Si.mg.L.Con.Intercepto <- round(muestras4$Si.mg.L.Con.Intercepto,2)
muestras4$Si.mg.L.Sin.Intercepto <- round(muestras4$Si.mg.L.Sin.Intercepto,2)
muestras4$SiO2 <- rep(NA, 10)
muestras4$SiO2[10] <-round((27.90*60.08*100*0.1*100)/(1000*28.09*2.0144),2)
View(muestras)
muestras4$SiO2[10]
muestras4$SiO2[10]
